Given an array of size n-1 such that it only contains distinct integers in the range of 1 to n. Return the missing element.

Examples:

Input: n = 5, arr[] = {1,2,3,5}
Output: 4
Explanation : All the numbers from 1 to 5 are present except 4.
Input: n = 2, arr[] = {1}
Output: 2
Explanation : All the numbers from 1 to 2 are present except 2.
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ n ≤ 106
1 ≤ arr[i] ≤ 106

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Concept:
- Find the sum of all the natural numbers from 1 to n
- Find the sum of array elements
- Missing no is the difference of both the sums

class Solution {

    // Note that the size of the array is n-1
    int missingNumber(int n, int arr[]) {

        // Your Code Here
        int sum1= (n* (n+1))/2;
        int sum2=0;
        for(int i=0;i<n-1;i++){
            sum2=sum2+arr[i];
        }
        return(sum1-sum2);
    }
}

