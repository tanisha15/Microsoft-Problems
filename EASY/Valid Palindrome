A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

class Solution {
    public boolean isPalindrome(String s) {
       if (s.isEmpty()){
        return true;
       }
       String str1="";
       s=s.toLowerCase();
       for(int i=0;i<=s.length()-1;i++){
        char ch=s.charAt(i);
        if (Character.isLetterOrDigit(ch)){
            str1=str1+ch;
            }
        }

       int start=0;
       int last=str1.length()-1;
       while(start<last){
        char ch1= str1.charAt(start);
        char ch2= str1.charAt(last);
            if (ch1==ch2){
                start++;
                last--;
            }
            else{
                return false;
            }
       }
       return true;
    }
}

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Approach:

- First return true if the string is empty
- Convert the string to lower case. Note: if you are not using string builder then you need to store the string to somewhere when using the lower case function
- now check if the string is containing only alphanumeric characters and add to new string
- now take 2 pointers: start and last and then check if the characters at start and last index are matching or not
- if matching then change the pointers else directly return false because string is not palindrome

Time complexity: O(n)
Space complexity: O(n)




